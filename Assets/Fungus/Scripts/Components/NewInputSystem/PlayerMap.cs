//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.5.1
//     from Assets/Fungus/Scripts/Components/NewInputSystem/PlayerMap.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerMap: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerMap()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerMap"",
    ""maps"": [
        {
            ""name"": ""Movimiento"",
            ""id"": ""4fce8ae8-cafa-4c1c-b23f-53b9fe51e8d6"",
            ""actions"": [
                {
                    ""name"": ""Jumping"",
                    ""type"": ""Button"",
                    ""id"": ""e918e716-d7f5-48a2-b9b1-3c1c6417d448"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""bd70baec-e946-4257-a92e-7ad29693cb0a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""853fd48b-9f95-45ea-ae12-17d1f5373147"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""39435dce-5d80-419f-a043-450d87c818ff"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""8f968ca6-ab88-4c9f-8426-9cf712ac0654"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""aae4f226-656f-4b21-a575-98d204c04635"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""d5a6f268-4940-4c16-84f9-a9df7ebcaa6b"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""8b53e176-925a-4466-918c-74ea6bff3611"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""9ea14dfb-1aca-4347-b8cc-6a5c031cd773"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""05d5dcff-2586-479c-aafd-c5d2a13cf1c6"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""04e88cf6-3dd8-4e43-94e9-c4cfb1d4aecb"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2(x=0.1,y=0.1)"",
                    ""groups"": ""Mouse"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e005be7a-96b4-4309-b5b8-53e416dfb67c"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Jumping"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ca64f9e1-6325-4274-a6db-9ae8c6aee1af"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Jumping"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Combate"",
            ""id"": ""c379473a-88c6-45f6-bddf-c9a088758be7"",
            ""actions"": [
                {
                    ""name"": ""Fire"",
                    ""type"": ""Button"",
                    ""id"": ""48ba6435-69ef-4704-a899-ead8dc4d4f41"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Recargar"",
                    ""type"": ""Button"",
                    ""id"": ""17549ff9-df29-47c2-8639-c1425dcc432e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""571e1910-0319-4f8d-b77e-9f697472d773"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7df4bb70-6cc0-4441-9b57-5a5ccf901d0b"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse"",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fe7855a5-4b1a-4b7c-818d-6e3d5e90ab29"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Recargar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""39106f8b-b231-455c-af09-dd7196d22f17"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Recargar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Interaccion"",
            ""id"": ""8ed91e15-b6a7-4015-bf8d-bcbe9335553b"",
            ""actions"": [
                {
                    ""name"": ""Interactuar"",
                    ""type"": ""Button"",
                    ""id"": ""fde5382b-109e-4ddc-85ae-22ff7d9b2d9f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Aceptar"",
                    ""type"": ""Button"",
                    ""id"": ""877ec74b-6118-40d7-8f13-220aebd210e7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancelar"",
                    ""type"": ""Button"",
                    ""id"": ""8ea278a3-b86d-4c5e-962b-2c1f0f3917e1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""a6bb32d7-7535-43f8-b034-eeebdf9c8665"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Interactuar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""12004901-ea4c-41b6-837e-6bd0cf4746c0"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Interactuar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""32d3c8f6-ae2c-4b93-ace3-a8da99c99f35"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Aceptar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cd626bae-2e4e-4e1a-a6b2-dd1f7ef29c5b"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse"",
                    ""action"": ""Aceptar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1aeb5b15-1163-4b77-b7ab-0640d79bb12f"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Aceptar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""68b9e5dd-e49f-48a0-b785-43a0e9f5c373"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Cancelar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""080ae1dc-81ce-4d99-a2b8-9ed3bd28d5f6"",
                    ""path"": ""<Keyboard>/backspace"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Cancelar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Farming"",
            ""id"": ""bfb23894-5a08-440d-881f-d21850e39119"",
            ""actions"": [
                {
                    ""name"": ""Destroy"",
                    ""type"": ""Button"",
                    ""id"": ""5f195381-d4d8-46fa-a9a1-ade30d9d183d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Collect"",
                    ""type"": ""Button"",
                    ""id"": ""753312cc-f897-40b7-a212-60eb115f9f5b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Eject"",
                    ""type"": ""Button"",
                    ""id"": ""7a9b393a-c6fd-449a-b4fe-85764a795f8a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveObject"",
                    ""type"": ""Button"",
                    ""id"": ""1d4807a7-8e70-4583-b4b6-69a8ae8033c4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DropObject"",
                    ""type"": ""Button"",
                    ""id"": ""b5cbe67c-1bab-49a5-a5c2-cb45e01ff068"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""4661ae90-499a-41bf-b2b9-f02af147b096"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Destroy"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7104443f-283d-4292-ac26-13dfc209a6a7"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse"",
                    ""action"": ""Destroy"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""760448a2-5ac6-42b3-8291-b432b82a0d06"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Collect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""751f7be3-f181-4c07-a7b6-5f19f809de7f"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse"",
                    ""action"": ""Collect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""48d8c55f-f6f4-4fa5-bb29-28917e101455"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Eject"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3269cce0-8ff5-4de8-8e4f-8c1e82e41123"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Eject"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""49edeca7-619b-4a1b-9891-124440a8c408"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""MoveObject"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""27dd5b67-1a2d-4b3a-bdca-a8dbb4e05541"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse"",
                    ""action"": ""MoveObject"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""987fb8e6-3f40-4b4e-961e-9a8670a67d25"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""DropObject"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9251135a-a07f-4c7a-8280-628a0a3bc0be"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse"",
                    ""action"": ""DropObject"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""6e399b35-0f93-459f-a2f9-c3593f018762"",
            ""actions"": [
                {
                    ""name"": ""Navigate"",
                    ""type"": ""PassThrough"",
                    ""id"": ""87e5d2e6-9196-455e-baaf-4017c778d556"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Submit"",
                    ""type"": ""Button"",
                    ""id"": ""678d5bda-5008-4484-911e-53b97d59fa56"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""4bbb8444-3096-4250-a6bf-7a4ed1732e8a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Point"",
                    ""type"": ""PassThrough"",
                    ""id"": ""a926b2c5-970b-42cc-9be6-5b83657bcaf1"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Click"",
                    ""type"": ""PassThrough"",
                    ""id"": ""30adc9e1-7fdc-43ae-9445-d0139cbaa8ab"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ScrollWheel"",
                    ""type"": ""PassThrough"",
                    ""id"": ""70ed49b9-a098-459e-865e-cf06627f822a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MiddleClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""323989c7-a20c-4b10-ad7e-e487417e25e5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""af45920c-9390-4f54-9cc0-dfec9289545d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TrackedDevicePosition"",
                    ""type"": ""PassThrough"",
                    ""id"": ""b9798fd8-bfc8-4549-bcdf-ecd542d8d8c3"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TrackedDeviceOrientation"",
                    ""type"": ""PassThrough"",
                    ""id"": ""e9b8f71a-5a0b-4469-b487-206325a6963b"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Gamepad"",
                    ""id"": ""c44cfe76-5b92-4998-a556-d6496ad59e47"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""ef76c6f5-fdbd-4a50-bc35-9a2c70bcd322"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""9d389cea-f516-4984-a901-2054dda826fd"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b1e7abc0-8bd9-453e-b5e6-83352a65f48b"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""90b0eaa5-05be-45c2-9096-e16ed6a9b439"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""3e7c6973-3d2b-4763-af4e-79ae95ec2af4"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""b0c1bfd3-e83a-4a69-8a45-09dd0637bc85"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""40afbfe6-e3b6-483c-adfd-de15c05993f4"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""eb8197b2-1836-4951-87a5-d9d1983adff2"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""e31a8d85-b563-4bb7-a247-664690fd462b"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Joystick"",
                    ""id"": ""0d64ecc0-c140-4e1b-beb2-032153bf9cec"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""accd3a03-1ee9-4b4b-aea3-cf8f694ce8d2"",
                    ""path"": ""<Joystick>/stick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""1871d956-87b6-4147-9bb0-47a2ef8809d1"",
                    ""path"": ""<Joystick>/stick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""4c784139-708e-44d8-bb8b-1749c24fee9b"",
                    ""path"": ""<Joystick>/stick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""b968fddc-37ba-4cab-9f33-37941159dd2b"",
                    ""path"": ""<Joystick>/stick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""36df9142-8f1d-427e-aac1-49fe9e594634"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""7900ce50-e214-48ad-b40a-c2651386ba64"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""d349105c-8300-41d8-a8b8-56e078a971e6"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""a56cab4d-3f43-41ba-87a1-a373045b46c5"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""2c2d18af-b992-43b6-a289-be7efbb0452d"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""4bfe46a5-ec26-4b98-9c9e-fb7bc4294988"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d92d6496-66ac-4c24-ae52-8087776984b9"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""09986244-06a3-4477-8c64-67f49858f2a5"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""23b1dc51-bf20-4b7b-959b-483d82efaa7e"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""dd3f66e8-a3ea-4033-a79e-b270512b82f3"",
                    ""path"": ""*/{Submit}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bf47beeb-4433-401d-b3ff-b4b4babee3e2"",
                    ""path"": ""*/{Cancel}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""51e58e4d-9905-4f25-b0d2-633b6744c50d"",
                    ""path"": ""<Keyboard>/backspace"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f2057872-41e0-4075-b8c4-5807260f765a"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ee0b57bd-bc6a-4715-a358-c8570637eb3c"",
                    ""path"": ""<Pen>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ec184f72-325c-4ff8-980f-3a6910c3536f"",
                    ""path"": ""<Touchscreen>/touch*/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b0149257-e196-49c2-bc67-0df0e76824bd"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b4d5e94a-a139-42c6-9248-6a46e5a90883"",
                    ""path"": ""<Pen>/tip"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""660e01f0-13f9-4ed6-b780-36bb81243ac1"",
                    ""path"": ""<Touchscreen>/touch*/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""88dd20e6-3f35-4914-8d12-fb29b4cab2a3"",
                    ""path"": ""<XRController>/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""04dd500b-656e-4c9b-890e-d34d623c160e"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ScrollWheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""23d08450-c45f-4238-8493-082f7af1d331"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MiddleClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6c94377e-ffe4-4711-896f-4420f8be711c"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e8571fb6-f101-48ea-8169-1af5c5aafc89"",
                    ""path"": ""<XRController>/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TrackedDevicePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2a92f22a-c59f-47a3-a531-d9a41325476c"",
                    ""path"": ""<XRController>/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TrackedDeviceOrientation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""PauseMap"",
            ""id"": ""31d99287-af52-4a71-a8ed-8d898fd1a3fc"",
            ""actions"": [
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""97ca803a-da61-4308-abfd-41923e512e01"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Inventory"",
                    ""type"": ""Button"",
                    ""id"": ""e2f3202d-44df-4b45-9319-07ed6df7c6ec"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""863328ec-8ba2-4308-b75e-4f8067cf2529"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""75c461b2-5208-4ac4-acfd-ea5c285fc3b0"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""64277467-1095-450e-b76a-9b464e4bbf06"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""225f96ce-696e-4e43-87f5-72c9b6cd7779"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""MovimientoAvanzado"",
            ""id"": ""8ba3619a-a4a6-49f7-b1dd-79776697e2f8"",
            ""actions"": [
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""deb8f9cc-b536-4f29-bdfb-e5771b1eabbe"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Trayectoria"",
                    ""type"": ""Button"",
                    ""id"": ""ec51b7f3-ca38-4c5e-b0b8-23808df3c6dd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ActivarTeleport"",
                    ""type"": ""Button"",
                    ""id"": ""acd839c8-d498-4f33-b303-c315996f3c40"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""7c56ebf9-9fb3-40af-8a72-566efe1667ec"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""79f9e20f-d312-41ff-ad11-d66cf5ca4b6e"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""13ad44b8-d987-4bfa-8f0e-b45e2c6afada"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Trayectoria"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a0132016-b480-4f66-9636-2f2d79f07a09"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Trayectoria"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""36a74479-7a71-4a53-b8e1-09ac3f8dae4f"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ActivarTeleport"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""607ae14b-cb85-4b3c-bc9f-563894ed114d"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""ActivarTeleport"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""ChangeSchemes"",
            ""id"": ""1f653380-8c0b-4aeb-a3e6-8d5e2d9b07f0"",
            ""actions"": [
                {
                    ""name"": ""EnableAdvanceMovement"",
                    ""type"": ""Button"",
                    ""id"": ""3de9b659-080e-4a1c-86b0-9ecbe04b0d7b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EnableFarming"",
                    ""type"": ""Button"",
                    ""id"": ""7956eaa8-5995-442d-813a-e02648915d74"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EnableCombat"",
                    ""type"": ""Button"",
                    ""id"": ""67bae39e-2362-4d09-918d-75d7754ec369"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""cfc66220-a07c-412b-9de6-ea5b620eb467"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""EnableCombat"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5d36efdc-111b-40d8-b498-423511f9e7f7"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""EnableCombat"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1a490d65-6893-4ab4-92f7-3673ec042bd8"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""EnableFarming"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1a0298b3-5896-4ac9-9379-f95ee70c0414"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""EnableFarming"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ecd244e0-48f7-4dd7-ab53-4b23fd6aaaa9"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""EnableAdvanceMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d33854a2-b29f-416d-83fa-77c51aae8552"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""EnableAdvanceMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Mouse"",
            ""bindingGroup"": ""Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Movimiento
        m_Movimiento = asset.FindActionMap("Movimiento", throwIfNotFound: true);
        m_Movimiento_Jumping = m_Movimiento.FindAction("Jumping", throwIfNotFound: true);
        m_Movimiento_Move = m_Movimiento.FindAction("Move", throwIfNotFound: true);
        m_Movimiento_Look = m_Movimiento.FindAction("Look", throwIfNotFound: true);
        // Combate
        m_Combate = asset.FindActionMap("Combate", throwIfNotFound: true);
        m_Combate_Fire = m_Combate.FindAction("Fire", throwIfNotFound: true);
        m_Combate_Recargar = m_Combate.FindAction("Recargar", throwIfNotFound: true);
        // Interaccion
        m_Interaccion = asset.FindActionMap("Interaccion", throwIfNotFound: true);
        m_Interaccion_Interactuar = m_Interaccion.FindAction("Interactuar", throwIfNotFound: true);
        m_Interaccion_Aceptar = m_Interaccion.FindAction("Aceptar", throwIfNotFound: true);
        m_Interaccion_Cancelar = m_Interaccion.FindAction("Cancelar", throwIfNotFound: true);
        // Farming
        m_Farming = asset.FindActionMap("Farming", throwIfNotFound: true);
        m_Farming_Destroy = m_Farming.FindAction("Destroy", throwIfNotFound: true);
        m_Farming_Collect = m_Farming.FindAction("Collect", throwIfNotFound: true);
        m_Farming_Eject = m_Farming.FindAction("Eject", throwIfNotFound: true);
        m_Farming_MoveObject = m_Farming.FindAction("MoveObject", throwIfNotFound: true);
        m_Farming_DropObject = m_Farming.FindAction("DropObject", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_Navigate = m_UI.FindAction("Navigate", throwIfNotFound: true);
        m_UI_Submit = m_UI.FindAction("Submit", throwIfNotFound: true);
        m_UI_Cancel = m_UI.FindAction("Cancel", throwIfNotFound: true);
        m_UI_Point = m_UI.FindAction("Point", throwIfNotFound: true);
        m_UI_Click = m_UI.FindAction("Click", throwIfNotFound: true);
        m_UI_ScrollWheel = m_UI.FindAction("ScrollWheel", throwIfNotFound: true);
        m_UI_MiddleClick = m_UI.FindAction("MiddleClick", throwIfNotFound: true);
        m_UI_RightClick = m_UI.FindAction("RightClick", throwIfNotFound: true);
        m_UI_TrackedDevicePosition = m_UI.FindAction("TrackedDevicePosition", throwIfNotFound: true);
        m_UI_TrackedDeviceOrientation = m_UI.FindAction("TrackedDeviceOrientation", throwIfNotFound: true);
        // PauseMap
        m_PauseMap = asset.FindActionMap("PauseMap", throwIfNotFound: true);
        m_PauseMap_Pause = m_PauseMap.FindAction("Pause", throwIfNotFound: true);
        m_PauseMap_Inventory = m_PauseMap.FindAction("Inventory", throwIfNotFound: true);
        // MovimientoAvanzado
        m_MovimientoAvanzado = asset.FindActionMap("MovimientoAvanzado", throwIfNotFound: true);
        m_MovimientoAvanzado_Dash = m_MovimientoAvanzado.FindAction("Dash", throwIfNotFound: true);
        m_MovimientoAvanzado_Trayectoria = m_MovimientoAvanzado.FindAction("Trayectoria", throwIfNotFound: true);
        m_MovimientoAvanzado_ActivarTeleport = m_MovimientoAvanzado.FindAction("ActivarTeleport", throwIfNotFound: true);
        // ChangeSchemes
        m_ChangeSchemes = asset.FindActionMap("ChangeSchemes", throwIfNotFound: true);
        m_ChangeSchemes_EnableAdvanceMovement = m_ChangeSchemes.FindAction("EnableAdvanceMovement", throwIfNotFound: true);
        m_ChangeSchemes_EnableFarming = m_ChangeSchemes.FindAction("EnableFarming", throwIfNotFound: true);
        m_ChangeSchemes_EnableCombat = m_ChangeSchemes.FindAction("EnableCombat", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Movimiento
    private readonly InputActionMap m_Movimiento;
    private List<IMovimientoActions> m_MovimientoActionsCallbackInterfaces = new List<IMovimientoActions>();
    private readonly InputAction m_Movimiento_Jumping;
    private readonly InputAction m_Movimiento_Move;
    private readonly InputAction m_Movimiento_Look;
    public struct MovimientoActions
    {
        private @PlayerMap m_Wrapper;
        public MovimientoActions(@PlayerMap wrapper) { m_Wrapper = wrapper; }
        public InputAction @Jumping => m_Wrapper.m_Movimiento_Jumping;
        public InputAction @Move => m_Wrapper.m_Movimiento_Move;
        public InputAction @Look => m_Wrapper.m_Movimiento_Look;
        public InputActionMap Get() { return m_Wrapper.m_Movimiento; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MovimientoActions set) { return set.Get(); }
        public void AddCallbacks(IMovimientoActions instance)
        {
            if (instance == null || m_Wrapper.m_MovimientoActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MovimientoActionsCallbackInterfaces.Add(instance);
            @Jumping.started += instance.OnJumping;
            @Jumping.performed += instance.OnJumping;
            @Jumping.canceled += instance.OnJumping;
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Look.started += instance.OnLook;
            @Look.performed += instance.OnLook;
            @Look.canceled += instance.OnLook;
        }

        private void UnregisterCallbacks(IMovimientoActions instance)
        {
            @Jumping.started -= instance.OnJumping;
            @Jumping.performed -= instance.OnJumping;
            @Jumping.canceled -= instance.OnJumping;
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Look.started -= instance.OnLook;
            @Look.performed -= instance.OnLook;
            @Look.canceled -= instance.OnLook;
        }

        public void RemoveCallbacks(IMovimientoActions instance)
        {
            if (m_Wrapper.m_MovimientoActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMovimientoActions instance)
        {
            foreach (var item in m_Wrapper.m_MovimientoActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MovimientoActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MovimientoActions @Movimiento => new MovimientoActions(this);

    // Combate
    private readonly InputActionMap m_Combate;
    private List<ICombateActions> m_CombateActionsCallbackInterfaces = new List<ICombateActions>();
    private readonly InputAction m_Combate_Fire;
    private readonly InputAction m_Combate_Recargar;
    public struct CombateActions
    {
        private @PlayerMap m_Wrapper;
        public CombateActions(@PlayerMap wrapper) { m_Wrapper = wrapper; }
        public InputAction @Fire => m_Wrapper.m_Combate_Fire;
        public InputAction @Recargar => m_Wrapper.m_Combate_Recargar;
        public InputActionMap Get() { return m_Wrapper.m_Combate; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CombateActions set) { return set.Get(); }
        public void AddCallbacks(ICombateActions instance)
        {
            if (instance == null || m_Wrapper.m_CombateActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_CombateActionsCallbackInterfaces.Add(instance);
            @Fire.started += instance.OnFire;
            @Fire.performed += instance.OnFire;
            @Fire.canceled += instance.OnFire;
            @Recargar.started += instance.OnRecargar;
            @Recargar.performed += instance.OnRecargar;
            @Recargar.canceled += instance.OnRecargar;
        }

        private void UnregisterCallbacks(ICombateActions instance)
        {
            @Fire.started -= instance.OnFire;
            @Fire.performed -= instance.OnFire;
            @Fire.canceled -= instance.OnFire;
            @Recargar.started -= instance.OnRecargar;
            @Recargar.performed -= instance.OnRecargar;
            @Recargar.canceled -= instance.OnRecargar;
        }

        public void RemoveCallbacks(ICombateActions instance)
        {
            if (m_Wrapper.m_CombateActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ICombateActions instance)
        {
            foreach (var item in m_Wrapper.m_CombateActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_CombateActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public CombateActions @Combate => new CombateActions(this);

    // Interaccion
    private readonly InputActionMap m_Interaccion;
    private List<IInteraccionActions> m_InteraccionActionsCallbackInterfaces = new List<IInteraccionActions>();
    private readonly InputAction m_Interaccion_Interactuar;
    private readonly InputAction m_Interaccion_Aceptar;
    private readonly InputAction m_Interaccion_Cancelar;
    public struct InteraccionActions
    {
        private @PlayerMap m_Wrapper;
        public InteraccionActions(@PlayerMap wrapper) { m_Wrapper = wrapper; }
        public InputAction @Interactuar => m_Wrapper.m_Interaccion_Interactuar;
        public InputAction @Aceptar => m_Wrapper.m_Interaccion_Aceptar;
        public InputAction @Cancelar => m_Wrapper.m_Interaccion_Cancelar;
        public InputActionMap Get() { return m_Wrapper.m_Interaccion; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InteraccionActions set) { return set.Get(); }
        public void AddCallbacks(IInteraccionActions instance)
        {
            if (instance == null || m_Wrapper.m_InteraccionActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_InteraccionActionsCallbackInterfaces.Add(instance);
            @Interactuar.started += instance.OnInteractuar;
            @Interactuar.performed += instance.OnInteractuar;
            @Interactuar.canceled += instance.OnInteractuar;
            @Aceptar.started += instance.OnAceptar;
            @Aceptar.performed += instance.OnAceptar;
            @Aceptar.canceled += instance.OnAceptar;
            @Cancelar.started += instance.OnCancelar;
            @Cancelar.performed += instance.OnCancelar;
            @Cancelar.canceled += instance.OnCancelar;
        }

        private void UnregisterCallbacks(IInteraccionActions instance)
        {
            @Interactuar.started -= instance.OnInteractuar;
            @Interactuar.performed -= instance.OnInteractuar;
            @Interactuar.canceled -= instance.OnInteractuar;
            @Aceptar.started -= instance.OnAceptar;
            @Aceptar.performed -= instance.OnAceptar;
            @Aceptar.canceled -= instance.OnAceptar;
            @Cancelar.started -= instance.OnCancelar;
            @Cancelar.performed -= instance.OnCancelar;
            @Cancelar.canceled -= instance.OnCancelar;
        }

        public void RemoveCallbacks(IInteraccionActions instance)
        {
            if (m_Wrapper.m_InteraccionActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IInteraccionActions instance)
        {
            foreach (var item in m_Wrapper.m_InteraccionActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_InteraccionActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public InteraccionActions @Interaccion => new InteraccionActions(this);

    // Farming
    private readonly InputActionMap m_Farming;
    private List<IFarmingActions> m_FarmingActionsCallbackInterfaces = new List<IFarmingActions>();
    private readonly InputAction m_Farming_Destroy;
    private readonly InputAction m_Farming_Collect;
    private readonly InputAction m_Farming_Eject;
    private readonly InputAction m_Farming_MoveObject;
    private readonly InputAction m_Farming_DropObject;
    public struct FarmingActions
    {
        private @PlayerMap m_Wrapper;
        public FarmingActions(@PlayerMap wrapper) { m_Wrapper = wrapper; }
        public InputAction @Destroy => m_Wrapper.m_Farming_Destroy;
        public InputAction @Collect => m_Wrapper.m_Farming_Collect;
        public InputAction @Eject => m_Wrapper.m_Farming_Eject;
        public InputAction @MoveObject => m_Wrapper.m_Farming_MoveObject;
        public InputAction @DropObject => m_Wrapper.m_Farming_DropObject;
        public InputActionMap Get() { return m_Wrapper.m_Farming; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(FarmingActions set) { return set.Get(); }
        public void AddCallbacks(IFarmingActions instance)
        {
            if (instance == null || m_Wrapper.m_FarmingActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_FarmingActionsCallbackInterfaces.Add(instance);
            @Destroy.started += instance.OnDestroy;
            @Destroy.performed += instance.OnDestroy;
            @Destroy.canceled += instance.OnDestroy;
            @Collect.started += instance.OnCollect;
            @Collect.performed += instance.OnCollect;
            @Collect.canceled += instance.OnCollect;
            @Eject.started += instance.OnEject;
            @Eject.performed += instance.OnEject;
            @Eject.canceled += instance.OnEject;
            @MoveObject.started += instance.OnMoveObject;
            @MoveObject.performed += instance.OnMoveObject;
            @MoveObject.canceled += instance.OnMoveObject;
            @DropObject.started += instance.OnDropObject;
            @DropObject.performed += instance.OnDropObject;
            @DropObject.canceled += instance.OnDropObject;
        }

        private void UnregisterCallbacks(IFarmingActions instance)
        {
            @Destroy.started -= instance.OnDestroy;
            @Destroy.performed -= instance.OnDestroy;
            @Destroy.canceled -= instance.OnDestroy;
            @Collect.started -= instance.OnCollect;
            @Collect.performed -= instance.OnCollect;
            @Collect.canceled -= instance.OnCollect;
            @Eject.started -= instance.OnEject;
            @Eject.performed -= instance.OnEject;
            @Eject.canceled -= instance.OnEject;
            @MoveObject.started -= instance.OnMoveObject;
            @MoveObject.performed -= instance.OnMoveObject;
            @MoveObject.canceled -= instance.OnMoveObject;
            @DropObject.started -= instance.OnDropObject;
            @DropObject.performed -= instance.OnDropObject;
            @DropObject.canceled -= instance.OnDropObject;
        }

        public void RemoveCallbacks(IFarmingActions instance)
        {
            if (m_Wrapper.m_FarmingActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IFarmingActions instance)
        {
            foreach (var item in m_Wrapper.m_FarmingActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_FarmingActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public FarmingActions @Farming => new FarmingActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private List<IUIActions> m_UIActionsCallbackInterfaces = new List<IUIActions>();
    private readonly InputAction m_UI_Navigate;
    private readonly InputAction m_UI_Submit;
    private readonly InputAction m_UI_Cancel;
    private readonly InputAction m_UI_Point;
    private readonly InputAction m_UI_Click;
    private readonly InputAction m_UI_ScrollWheel;
    private readonly InputAction m_UI_MiddleClick;
    private readonly InputAction m_UI_RightClick;
    private readonly InputAction m_UI_TrackedDevicePosition;
    private readonly InputAction m_UI_TrackedDeviceOrientation;
    public struct UIActions
    {
        private @PlayerMap m_Wrapper;
        public UIActions(@PlayerMap wrapper) { m_Wrapper = wrapper; }
        public InputAction @Navigate => m_Wrapper.m_UI_Navigate;
        public InputAction @Submit => m_Wrapper.m_UI_Submit;
        public InputAction @Cancel => m_Wrapper.m_UI_Cancel;
        public InputAction @Point => m_Wrapper.m_UI_Point;
        public InputAction @Click => m_Wrapper.m_UI_Click;
        public InputAction @ScrollWheel => m_Wrapper.m_UI_ScrollWheel;
        public InputAction @MiddleClick => m_Wrapper.m_UI_MiddleClick;
        public InputAction @RightClick => m_Wrapper.m_UI_RightClick;
        public InputAction @TrackedDevicePosition => m_Wrapper.m_UI_TrackedDevicePosition;
        public InputAction @TrackedDeviceOrientation => m_Wrapper.m_UI_TrackedDeviceOrientation;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void AddCallbacks(IUIActions instance)
        {
            if (instance == null || m_Wrapper.m_UIActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_UIActionsCallbackInterfaces.Add(instance);
            @Navigate.started += instance.OnNavigate;
            @Navigate.performed += instance.OnNavigate;
            @Navigate.canceled += instance.OnNavigate;
            @Submit.started += instance.OnSubmit;
            @Submit.performed += instance.OnSubmit;
            @Submit.canceled += instance.OnSubmit;
            @Cancel.started += instance.OnCancel;
            @Cancel.performed += instance.OnCancel;
            @Cancel.canceled += instance.OnCancel;
            @Point.started += instance.OnPoint;
            @Point.performed += instance.OnPoint;
            @Point.canceled += instance.OnPoint;
            @Click.started += instance.OnClick;
            @Click.performed += instance.OnClick;
            @Click.canceled += instance.OnClick;
            @ScrollWheel.started += instance.OnScrollWheel;
            @ScrollWheel.performed += instance.OnScrollWheel;
            @ScrollWheel.canceled += instance.OnScrollWheel;
            @MiddleClick.started += instance.OnMiddleClick;
            @MiddleClick.performed += instance.OnMiddleClick;
            @MiddleClick.canceled += instance.OnMiddleClick;
            @RightClick.started += instance.OnRightClick;
            @RightClick.performed += instance.OnRightClick;
            @RightClick.canceled += instance.OnRightClick;
            @TrackedDevicePosition.started += instance.OnTrackedDevicePosition;
            @TrackedDevicePosition.performed += instance.OnTrackedDevicePosition;
            @TrackedDevicePosition.canceled += instance.OnTrackedDevicePosition;
            @TrackedDeviceOrientation.started += instance.OnTrackedDeviceOrientation;
            @TrackedDeviceOrientation.performed += instance.OnTrackedDeviceOrientation;
            @TrackedDeviceOrientation.canceled += instance.OnTrackedDeviceOrientation;
        }

        private void UnregisterCallbacks(IUIActions instance)
        {
            @Navigate.started -= instance.OnNavigate;
            @Navigate.performed -= instance.OnNavigate;
            @Navigate.canceled -= instance.OnNavigate;
            @Submit.started -= instance.OnSubmit;
            @Submit.performed -= instance.OnSubmit;
            @Submit.canceled -= instance.OnSubmit;
            @Cancel.started -= instance.OnCancel;
            @Cancel.performed -= instance.OnCancel;
            @Cancel.canceled -= instance.OnCancel;
            @Point.started -= instance.OnPoint;
            @Point.performed -= instance.OnPoint;
            @Point.canceled -= instance.OnPoint;
            @Click.started -= instance.OnClick;
            @Click.performed -= instance.OnClick;
            @Click.canceled -= instance.OnClick;
            @ScrollWheel.started -= instance.OnScrollWheel;
            @ScrollWheel.performed -= instance.OnScrollWheel;
            @ScrollWheel.canceled -= instance.OnScrollWheel;
            @MiddleClick.started -= instance.OnMiddleClick;
            @MiddleClick.performed -= instance.OnMiddleClick;
            @MiddleClick.canceled -= instance.OnMiddleClick;
            @RightClick.started -= instance.OnRightClick;
            @RightClick.performed -= instance.OnRightClick;
            @RightClick.canceled -= instance.OnRightClick;
            @TrackedDevicePosition.started -= instance.OnTrackedDevicePosition;
            @TrackedDevicePosition.performed -= instance.OnTrackedDevicePosition;
            @TrackedDevicePosition.canceled -= instance.OnTrackedDevicePosition;
            @TrackedDeviceOrientation.started -= instance.OnTrackedDeviceOrientation;
            @TrackedDeviceOrientation.performed -= instance.OnTrackedDeviceOrientation;
            @TrackedDeviceOrientation.canceled -= instance.OnTrackedDeviceOrientation;
        }

        public void RemoveCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IUIActions instance)
        {
            foreach (var item in m_Wrapper.m_UIActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_UIActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public UIActions @UI => new UIActions(this);

    // PauseMap
    private readonly InputActionMap m_PauseMap;
    private List<IPauseMapActions> m_PauseMapActionsCallbackInterfaces = new List<IPauseMapActions>();
    private readonly InputAction m_PauseMap_Pause;
    private readonly InputAction m_PauseMap_Inventory;
    public struct PauseMapActions
    {
        private @PlayerMap m_Wrapper;
        public PauseMapActions(@PlayerMap wrapper) { m_Wrapper = wrapper; }
        public InputAction @Pause => m_Wrapper.m_PauseMap_Pause;
        public InputAction @Inventory => m_Wrapper.m_PauseMap_Inventory;
        public InputActionMap Get() { return m_Wrapper.m_PauseMap; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PauseMapActions set) { return set.Get(); }
        public void AddCallbacks(IPauseMapActions instance)
        {
            if (instance == null || m_Wrapper.m_PauseMapActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PauseMapActionsCallbackInterfaces.Add(instance);
            @Pause.started += instance.OnPause;
            @Pause.performed += instance.OnPause;
            @Pause.canceled += instance.OnPause;
            @Inventory.started += instance.OnInventory;
            @Inventory.performed += instance.OnInventory;
            @Inventory.canceled += instance.OnInventory;
        }

        private void UnregisterCallbacks(IPauseMapActions instance)
        {
            @Pause.started -= instance.OnPause;
            @Pause.performed -= instance.OnPause;
            @Pause.canceled -= instance.OnPause;
            @Inventory.started -= instance.OnInventory;
            @Inventory.performed -= instance.OnInventory;
            @Inventory.canceled -= instance.OnInventory;
        }

        public void RemoveCallbacks(IPauseMapActions instance)
        {
            if (m_Wrapper.m_PauseMapActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPauseMapActions instance)
        {
            foreach (var item in m_Wrapper.m_PauseMapActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PauseMapActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PauseMapActions @PauseMap => new PauseMapActions(this);

    // MovimientoAvanzado
    private readonly InputActionMap m_MovimientoAvanzado;
    private List<IMovimientoAvanzadoActions> m_MovimientoAvanzadoActionsCallbackInterfaces = new List<IMovimientoAvanzadoActions>();
    private readonly InputAction m_MovimientoAvanzado_Dash;
    private readonly InputAction m_MovimientoAvanzado_Trayectoria;
    private readonly InputAction m_MovimientoAvanzado_ActivarTeleport;
    public struct MovimientoAvanzadoActions
    {
        private @PlayerMap m_Wrapper;
        public MovimientoAvanzadoActions(@PlayerMap wrapper) { m_Wrapper = wrapper; }
        public InputAction @Dash => m_Wrapper.m_MovimientoAvanzado_Dash;
        public InputAction @Trayectoria => m_Wrapper.m_MovimientoAvanzado_Trayectoria;
        public InputAction @ActivarTeleport => m_Wrapper.m_MovimientoAvanzado_ActivarTeleport;
        public InputActionMap Get() { return m_Wrapper.m_MovimientoAvanzado; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MovimientoAvanzadoActions set) { return set.Get(); }
        public void AddCallbacks(IMovimientoAvanzadoActions instance)
        {
            if (instance == null || m_Wrapper.m_MovimientoAvanzadoActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MovimientoAvanzadoActionsCallbackInterfaces.Add(instance);
            @Dash.started += instance.OnDash;
            @Dash.performed += instance.OnDash;
            @Dash.canceled += instance.OnDash;
            @Trayectoria.started += instance.OnTrayectoria;
            @Trayectoria.performed += instance.OnTrayectoria;
            @Trayectoria.canceled += instance.OnTrayectoria;
            @ActivarTeleport.started += instance.OnActivarTeleport;
            @ActivarTeleport.performed += instance.OnActivarTeleport;
            @ActivarTeleport.canceled += instance.OnActivarTeleport;
        }

        private void UnregisterCallbacks(IMovimientoAvanzadoActions instance)
        {
            @Dash.started -= instance.OnDash;
            @Dash.performed -= instance.OnDash;
            @Dash.canceled -= instance.OnDash;
            @Trayectoria.started -= instance.OnTrayectoria;
            @Trayectoria.performed -= instance.OnTrayectoria;
            @Trayectoria.canceled -= instance.OnTrayectoria;
            @ActivarTeleport.started -= instance.OnActivarTeleport;
            @ActivarTeleport.performed -= instance.OnActivarTeleport;
            @ActivarTeleport.canceled -= instance.OnActivarTeleport;
        }

        public void RemoveCallbacks(IMovimientoAvanzadoActions instance)
        {
            if (m_Wrapper.m_MovimientoAvanzadoActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMovimientoAvanzadoActions instance)
        {
            foreach (var item in m_Wrapper.m_MovimientoAvanzadoActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MovimientoAvanzadoActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MovimientoAvanzadoActions @MovimientoAvanzado => new MovimientoAvanzadoActions(this);

    // ChangeSchemes
    private readonly InputActionMap m_ChangeSchemes;
    private List<IChangeSchemesActions> m_ChangeSchemesActionsCallbackInterfaces = new List<IChangeSchemesActions>();
    private readonly InputAction m_ChangeSchemes_EnableAdvanceMovement;
    private readonly InputAction m_ChangeSchemes_EnableFarming;
    private readonly InputAction m_ChangeSchemes_EnableCombat;
    public struct ChangeSchemesActions
    {
        private @PlayerMap m_Wrapper;
        public ChangeSchemesActions(@PlayerMap wrapper) { m_Wrapper = wrapper; }
        public InputAction @EnableAdvanceMovement => m_Wrapper.m_ChangeSchemes_EnableAdvanceMovement;
        public InputAction @EnableFarming => m_Wrapper.m_ChangeSchemes_EnableFarming;
        public InputAction @EnableCombat => m_Wrapper.m_ChangeSchemes_EnableCombat;
        public InputActionMap Get() { return m_Wrapper.m_ChangeSchemes; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ChangeSchemesActions set) { return set.Get(); }
        public void AddCallbacks(IChangeSchemesActions instance)
        {
            if (instance == null || m_Wrapper.m_ChangeSchemesActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_ChangeSchemesActionsCallbackInterfaces.Add(instance);
            @EnableAdvanceMovement.started += instance.OnEnableAdvanceMovement;
            @EnableAdvanceMovement.performed += instance.OnEnableAdvanceMovement;
            @EnableAdvanceMovement.canceled += instance.OnEnableAdvanceMovement;
            @EnableFarming.started += instance.OnEnableFarming;
            @EnableFarming.performed += instance.OnEnableFarming;
            @EnableFarming.canceled += instance.OnEnableFarming;
            @EnableCombat.started += instance.OnEnableCombat;
            @EnableCombat.performed += instance.OnEnableCombat;
            @EnableCombat.canceled += instance.OnEnableCombat;
        }

        private void UnregisterCallbacks(IChangeSchemesActions instance)
        {
            @EnableAdvanceMovement.started -= instance.OnEnableAdvanceMovement;
            @EnableAdvanceMovement.performed -= instance.OnEnableAdvanceMovement;
            @EnableAdvanceMovement.canceled -= instance.OnEnableAdvanceMovement;
            @EnableFarming.started -= instance.OnEnableFarming;
            @EnableFarming.performed -= instance.OnEnableFarming;
            @EnableFarming.canceled -= instance.OnEnableFarming;
            @EnableCombat.started -= instance.OnEnableCombat;
            @EnableCombat.performed -= instance.OnEnableCombat;
            @EnableCombat.canceled -= instance.OnEnableCombat;
        }

        public void RemoveCallbacks(IChangeSchemesActions instance)
        {
            if (m_Wrapper.m_ChangeSchemesActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IChangeSchemesActions instance)
        {
            foreach (var item in m_Wrapper.m_ChangeSchemesActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_ChangeSchemesActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public ChangeSchemesActions @ChangeSchemes => new ChangeSchemesActions(this);
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    private int m_KeyboardSchemeIndex = -1;
    public InputControlScheme KeyboardScheme
    {
        get
        {
            if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
            return asset.controlSchemes[m_KeyboardSchemeIndex];
        }
    }
    private int m_MouseSchemeIndex = -1;
    public InputControlScheme MouseScheme
    {
        get
        {
            if (m_MouseSchemeIndex == -1) m_MouseSchemeIndex = asset.FindControlSchemeIndex("Mouse");
            return asset.controlSchemes[m_MouseSchemeIndex];
        }
    }
    public interface IMovimientoActions
    {
        void OnJumping(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
    }
    public interface ICombateActions
    {
        void OnFire(InputAction.CallbackContext context);
        void OnRecargar(InputAction.CallbackContext context);
    }
    public interface IInteraccionActions
    {
        void OnInteractuar(InputAction.CallbackContext context);
        void OnAceptar(InputAction.CallbackContext context);
        void OnCancelar(InputAction.CallbackContext context);
    }
    public interface IFarmingActions
    {
        void OnDestroy(InputAction.CallbackContext context);
        void OnCollect(InputAction.CallbackContext context);
        void OnEject(InputAction.CallbackContext context);
        void OnMoveObject(InputAction.CallbackContext context);
        void OnDropObject(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnNavigate(InputAction.CallbackContext context);
        void OnSubmit(InputAction.CallbackContext context);
        void OnCancel(InputAction.CallbackContext context);
        void OnPoint(InputAction.CallbackContext context);
        void OnClick(InputAction.CallbackContext context);
        void OnScrollWheel(InputAction.CallbackContext context);
        void OnMiddleClick(InputAction.CallbackContext context);
        void OnRightClick(InputAction.CallbackContext context);
        void OnTrackedDevicePosition(InputAction.CallbackContext context);
        void OnTrackedDeviceOrientation(InputAction.CallbackContext context);
    }
    public interface IPauseMapActions
    {
        void OnPause(InputAction.CallbackContext context);
        void OnInventory(InputAction.CallbackContext context);
    }
    public interface IMovimientoAvanzadoActions
    {
        void OnDash(InputAction.CallbackContext context);
        void OnTrayectoria(InputAction.CallbackContext context);
        void OnActivarTeleport(InputAction.CallbackContext context);
    }
    public interface IChangeSchemesActions
    {
        void OnEnableAdvanceMovement(InputAction.CallbackContext context);
        void OnEnableFarming(InputAction.CallbackContext context);
        void OnEnableCombat(InputAction.CallbackContext context);
    }
}
